{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","handleSetMovies","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","query","setQuery","_useState7","_useState8","setMovie","_useState9","_useState10","formInput","setFormInput","useEffect","fetch","concat","then","res","json","catch","Response","Error","getMovie","result","movieData","Title","Plot","Poster","imdbID","finally","useMemo","_Fragment","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","length","onClick","App","setMovies","find","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f3beb59.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }:Props) => (\n  <div className=\"container\" data-cy=\"previewContainer\">\n    <h2 className=\"title\">Preview</h2>\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { useEffect, useMemo, useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieData } from '../../types/MovieData';\n\ntype FindMovieProps = {\n  handleSetMovies: (e:Movie) => void\n};\n\nexport const FindMovie: React.FC<FindMovieProps> = ({ handleSetMovies }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<boolean>(false);\n  const [query, setQuery] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [formInput, setFormInput] = useState('');\n\n  useEffect(() => {\n    setIsLoading(false);\n    setError(false);\n    setMovie(null);\n    if (!query) {\n      return;\n    }\n\n    setIsLoading(true);\n    getMovie(query)\n      .then((result: MovieData | ResponseError) => {\n        if (result) {\n          const movieData = result as MovieData;\n\n          setMovie({\n            title: movieData.Title,\n            description: movieData.Plot,\n            imgUrl: movieData.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : movieData.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n            imdbId: movieData.imdbID,\n          });\n        }\n\n        if ((result as ResponseError).Response === 'False') {\n          setError(true);\n          setMovie(null);\n        }\n      })\n      .finally(() => setIsLoading(false));\n  }, [query]);\n\n  useMemo(() => {\n    setError(false);\n  }, [formInput]);\n\n  const onAddClick = () => {\n    handleSetMovies(movie as Movie);\n    setQuery('');\n    setMovie(null);\n    setFormInput('');\n  };\n\n  const onSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    setQuery(formInput);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': error,\n              })}\n              value={formInput}\n              onChange={(e) => setFormInput(e.target.value)}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={formInput.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={onAddClick}\n              >\n                Add to the list\n              </button>\n            )}\n\n          </div>\n        </div>\n      </form>\n\n      {error && <p>{error}</p>}\n      {movie && <MovieCard movie={movie} />}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=9f70a313';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleSetMovies = (e: Movie) => {\n    if (movies) {\n      if (movies.find(movie => movie.imdbId === e.imdbId)) {\n        return;\n      }\n    }\n\n    setMovies([...movies, e]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          handleSetMovies={handleSetMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}